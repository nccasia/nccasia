const locations = [
    {
      name: "HA NOI 1",
      url: "https://maps.app.goo.gl/4b1yWzyB8E2AQVpVA",
      address: "2nd Floor, CT3 The Pride, To Huu Street, Ha Dong, Ha Noi",
    },
    {
      name: "NGHE AN",
      url: "https://goo.gl/maps/tjkFGN3iDCEpG4fU7",
      address: "4th Floor, 138 Ha Huy Tap Street, Vinh Phu, Nghe An",
    },
    {
      name: "SAI GON",
      url: "https://maps.app.goo.gl/RZ6F4VG3mw8J4fPh9",
      address:
        "8th Floor, ST. MORITZ Tower, 1014 Pham Van Dong Street, Hiep Binh, Ho Chi Minh City",
    },
    {
      name: "HA NOI 2",
      url: "https://goo.gl/maps/4qtJTTHFhKQ7bcmN9",
      address:
        "7th Floor, VinFast My Dinh Building, 8 Pham Hung Street, Tu Liem, Ha Noi",
    },
    {
      name: "QUY NHON",
      url: "https://goo.gl/maps/NGYZFbZ1kAG2mF2B7",
      address:
        "3rd Floor, Hibecco Building, 307 Nguyen Thi Minh Khai Street, Quy Nhon Nam, Gia Lai",
    },
    {
      name: "NCC Japan",
      url: "https://www.nccsoft.jp/",
      address: "2-35-5 Higashiyukigaya, Ota City, Tokyo, Japan 145-0065",
    },
    {
      name: "HA NOI 3",
      url: "https://goo.gl/maps/VykV996Pra8XCUYo8",
      address: "5th Floor, Hong Ha Tower, 89 Thinh Liet Street, Thinh Liet, Ha Noi",
    },
    {
      name: "DA NANG",
      url: "https://goo.gl/maps/euZRpDDAFZsXb4tX6",
      address:
        "3rd Floor, TP Building, 268 30/4 Street, Hoa Cuong, Da Nang",
    },
  ];
  function footerItem(location) {
    return `\n            <a href="${location.url}" target="_blank">\n                <div class="header_footer">\n                <i  class="fa-sharp fa-solid fa-location-dot fa-locations"></i>\n                    <div class="link-footer ">\n                        <p><span class="text-footer">${location.name} |</span>${location.address}</p>\n                    </div>\n                </div>\n            </a>\n    `;
  }
  function renderFooter() {
    const footerContainer = document.getElementById("footer-container");
    if (!footerContainer) return;
    const footerItemsHTML = locations.map((location) => footerItem(location));
    const firstThreeItems = footerItemsHTML.slice(0, 3).join("");
    const nextThreeItems = footerItemsHTML.slice(3, 6).join("");
    const remainingItems = footerItemsHTML.slice(6).join("");
    footerContainer.innerHTML = `\n            <div class="footer">\n                <div class="footer_head">\n                    <div class="grid footer_head-category">\n                        <div class="footer_head-collection ">\n                        <div class="footer_head-item--infomation">\n                            <div class="logo_image"><img loading="lazy" src="./assets/images/logo.png" width="120"\n                                    height="120" alt=""></div>\n                            <div class="footer_head_item_bottom">\n                                <p class="footer_head-item-phone-text">(+84) 2466874606</p>\n                                <p class="footer_head-item-email-text">info@ncc.asia\n                            </div>\n                        </div>\n                        </div>\n                        <div class="footer_head-collection footer_head-collection-address">\n                        <div class="footer_head-list-first ">\n                            ${firstThreeItems}\n                        </div>\n                        </div>\n                        <div class="footer_head-collection footer_head-collection-address">\n                        <div class="footer_head-list-main ">\n                            ${nextThreeItems}\n                        </div>\n                        </div>\n                        <div class="footer_head-collection footer_head-collection-address">\n                        <div class="footer_head-list-main ">\n                            ${remainingItems}\n                        </div>\n                        </div>\n                    </div>\n                    <div class="grid nav_footer">\n                        <div class="nav_footer-head">\n                            <p class="footer_head-item-phone-text">(+84) 2466874606</p>\n                            <p class="footer_head-item-email-text">info@ncc.asia</p>\n                        </div>\n                        <div class="nav_footer-adreess">\n                             ${footerItemsHTML.join(
      ""
    )}\n                        </div>\n                    </div>\n                </div>\n\n                <div class="footer_bottom">\n                <div class=" grid footer_bottom-container">\n                    <div class="footer_social">\n                        <div class="footer_social-image"><a href="https://twitter.com/nccsoft" aria-label="twitter"\n                                target="_blank"><img loading="lazy" src="./assets/images/tweet.svg" width="40"\n                                    height="40" alt=""></a></div>\n                        <div class="footer_social-image"><a href="https://www.facebook.com/nccsoft.com.vn"\n                                aria-label="facebook" target="_blank"><img loading="lazy"\n                                    src="./assets/images/facebook.svg" width="40" height="40" alt=""></a></div>\n                        <div class="footer_social-image"><a href="/" aria-label="google"><img loading="lazy"\n                                    src="./assets/images/google.svg" width="40" height="40" alt=""></a></div>\n                    </div>\n                    <div class="footer_copyright">\n                        <p>2023 &copy; NCC Vietnam. All rights reserved.</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `;
  }
  renderFooter();
  const btnPopup = document.getElementsByClassName("sub-button"),
    btnPopupMobile = document.querySelector(".sub-button2"),
    btnSendProject = document.getElementsByClassName("button-primary"),
    btnCancelPopupMobile = document.querySelector(".btn-cancel"),
    popup = document.querySelector(".modal"),
    popupMobile = document.querySelector(".mobile-modal"),
    btnSendPopup = document.querySelector(".modal_popup_main button"),
    inputPopup = document.querySelector(".modal-input"),
    inputPopupMobile = document.querySelector(".modal-input-mb"),
    btnCheck = document.getElementsByClassName("cbPopup"),
    handleClosePopUp = () => {
      (popup.style.display = "none"), popup.classList.remove("hidePopup");
    },
    handleClosePopUpMobile = () => {
      (popupMobile.style.display = "none"),
        popupMobile.classList.remove("hidePopup");
    },
    handleOpenPopUp = () => {
      popup.style.display = "block";
    },
    handleOpenPopUpMobile = () => {
      popupMobile.style.display = "block";
    },
    resetPopUp = () => {
      (category = []), (inputPopup.value = "");
    },
    resetPopUpMobile = () => {
      (category = []), (inputPopupMobile.value = "");
    },
    validateEmail = (o) =>
      o.match(
        /^([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/
      );
  btnCancelPopupMobile.addEventListener("click", function () {
    popupMobile.classList.add("hidePopup");
  });
  let category = [];
  popup.addEventListener("click", function (o) {
    o.target === o.currentTarget &&
      (popup.classList.add("hidePopup"), resetPopUp());
  });
  for (let o = 0; o < btnPopup.length; o++)
    btnPopup[o].addEventListener("click", function (o) {
      (popup.style.display = "block"),
        resetPopUp(),
        category.push(Number(o.target.dataset.id));
    });
  btnPopupMobile.addEventListener("click", function () {
    (popupMobile.style.display = "block"), resetPopUpMobile();
    for (let o = 0; btnCheck[o]; ++o) btnCheck[o].checked = !1;
  }),
    popup.addEventListener("animationend", function () {
      this.classList.contains("hidePopup") && (handleClosePopUp(), resetPopUp());
    }),
    popupMobile.addEventListener("animationend", function () {
      this.classList.contains("hidePopup") &&
        (handleClosePopUpMobile(), resetPopUpMobile());
    });
  const formSendEmail = document.querySelector(".send-email");
  formSendEmail.addEventListener("click", (o) => {
    const l = document.getElementById("email-project").value;
    validateEmail(l) && (handleClosePopUp(), sendApi(l));
  });
  const formSendEmailMobile = document.querySelector(".send-email-mb");
  function sendApi(o) {
    fetch("https://email.ncc.asia/ncc-site-api-sendmail", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ email: o, type: "case_study", category: category }),
    })
      .then((o) => o.json())
      .then((o) => {
        o.success
          ? (printMess(
              "nameSuccess",
              "Thank you, your submission has been received."
            ),
            formEl.reset())
          : printMess("nameError", `${o.message}`);
      })
      .catch((o) => {
        printMess(
          "nameError",
          "Oops, something went wrong. Please try again later."
        );
      });
  }
  formSendEmailMobile.addEventListener("click", (o) => {
    const l = document.getElementById("email-project-mb").value;
    if (validateEmail(l)) {
      for (let o = 0; btnCheck[o]; ++o)
        btnCheck[o].checked && category.push(Number(btnCheck[o].value));
      0 !== category.length && (handleClosePopUpMobile(), sendApi(l));
    }
  });
  const navCol = document.querySelector(".navbar-collapse"),
    btnMenu = document.querySelector(".menu-icon-btn"),
    home = document.querySelector(".home"),
    listMenu = document.getElementsByClassName("list-menu");
  for (let o = 0; o <= listMenu.length; o += 1)
    listMenu[o] &&
      listMenu[o].addEventListener("click", function (l) {
        for (let o = 0; o <= listMenu.length; o += 1)
          listMenu[o] && listMenu[o].classList.remove("active-menu");
        listMenu[o].classList.add("active-menu");
      });
  function hide(o) {
    navCol && navCol.classList.toggle("navbar-collapse-active"),
      navCol.classList.add("hidePopup"),
      btnMenu.classList.remove("toggled");
  }
  function printMess(o, l) {
    document.getElementById(o).innerHTML = l;
  }
  home &&
    home.addEventListener("click", () => {
      for (let o = 0; o <= listMenu.length; o += 1)
        listMenu[o] && listMenu[o].classList.remove("active-menu");
    }),
    btnMenu &&
      btnMenu.addEventListener("click", () => {
        navCol.classList.contains("navbar-collapse-active")
          ? (navCol.classList.add("hidePopup"),
            navCol && navCol.classList.remove("navbar-collapse-active"),
            btnMenu.classList.remove("toggled"))
          : (navCol && navCol.classList.add("navbar-collapse-active"),
            btnMenu.classList.add("toggled"));
      }),
    navCol.addEventListener("animationend", function () {
      this.classList.contains("hidePopup") && this.classList.remove("hidePopup");
    });
  const formEl = document.querySelector(".form");
  formEl.addEventListener("submit", (o) => {
    o.preventDefault();
    const l = document.getElementById("fullName").value,
      c = document.getElementById("email").value,
      a = document.getElementById("phone").value,
      r = document.getElementById("content").value,
      d = grecaptcha.getResponse();
    grecaptcha.ready(function () {
      if ("" === l || "" === c || "" === a || "" === r || "" === d)
        return void (document.getElementById("nameMiss").innerHTML =
          "Please fill out all required fields.");
      Array.from(formEl.elements).forEach((o) => (o.disabled = !0));
      const o = {
          email: c,
          content: `Name: ${l}\n Phone: ${a}\n Content: ${r}`,
          gresponse: d,
        },
        h = formEl.querySelector('button[type="submit"]'),
        m = formEl.querySelector('button[type="button"]');
      h.classList.add("d-none"),
        m.classList.remove("d-none"),
        fetch("https://email.ncc.asia/ncc-site-api-sendmail", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(o),
        })
          .then((o) => o.json())
          .then((o) => {
            o.success
              ? (printMess(
                  "nameSuccess",
                  "Thank you, your submission has been received."
                ),
                formEl.reset())
              : printMess("nameError", `${o.message}`);
          })
          .catch((o) => {
            printMess(
              "nameError",
              "Oops, something went wrong. Please try again later."
            );
          })
          .finally(() => {
            formEl.reset(),
              Array.from(formEl.elements).forEach((o) => (o.disabled = !1)),
              h.classList.remove("d-none"),
              m.classList.add("d-none");
          });
    });
  });
  let valueDisplays = document.querySelectorAll(".num-count"),
    interval = 900;
  const areaTranNhan = document.getElementById("trannhan"),
    areaLeLinh = document.getElementById("lelinh"),
    areaManhTien = document.getElementById("manhtien"),
    areaPhucDuong = document.getElementById("phucduong"),
    elTranNhan = document.querySelector(".text_TranNhan"),
    elLeLinh = document.querySelector(".text_LeLinh"),
    elManhTien = document.querySelector(".text_ManhTien"),
    elPhucDuong = document.querySelector(".text_PhucDuong");
  function scrollTrigger(o, l = {}) {
    let c = document.querySelectorAll(o);
    (c = Array.from(c)),
      c.forEach((o) => {
        addObserver(o, l);
      });
  }
  function addObserver(o, l) {
    if (!("IntersectionObserver" in window))
      return void (l.cb ? l.cb(o) : entry.target.classList.add("active"));
    new IntersectionObserver((c, a) => {
      c.forEach((c) => {
        c.isIntersecting &&
          (l.cb
            ? l.cb(o)
            : (c.target.classList.add("active"),
              o.classList.contains("scrollBox2") &&
                valueDisplays.forEach((o, l) => {
                  setTimeout(function () {
                    let l = 0,
                      c = parseInt(o.getAttribute("data-val")),
                      a = Math.floor(interval / c),
                      r = setInterval(function () {
                        (l += 1), (o.textContent = l), l == c && clearInterval(r);
                      }, a);
                  }, 300 * l);
                })),
          a.unobserve(c.target));
      });
    }, l).observe(o);
  }
  let width, height;
  scrollTrigger(".scrollBox", { rootMargin: "00px" }),
    scrollTrigger(".scrollBox2", { rootMargin: "00px" });
  let widthImgTranNhan = 0.524,
    heightImgTranNhan = 0.33,
    widthImgLeLinh = 146 / 750,
    heightImgLeLinh = 0.405,
    widthImgPhucDuong = 0.432,
    heightImgPhucDuong = 0.556,
    widthImgManhTien = 0.768,
    heightImgManhTien = 0.473;
  const changeCoords = (o) => {
      let l;
      const c = 100 / 750;
      l =
        "trannhan" == o
          ? `${widthImgTranNhan * width}, ${heightImgTranNhan * height}, ${
              c * width
            }`
          : "lelinh" == o
          ? `${widthImgLeLinh * width}, ${heightImgLeLinh * height}, ${c * width}`
          : "phucduong" == o
          ? `${widthImgPhucDuong * width}, ${heightImgPhucDuong * height}, ${
              c * width
            }`
          : `${widthImgManhTien * width}, ${heightImgManhTien * height}, ${
              c * width
            }`;
      document.getElementById(o).setAttribute("coords", l);
    },
    setHoverArea = (o) => {
      const l = document.getElementById(o.id);
      let c = document.body.clientWidth,
        a = 20;
      if (
        (c <= 680 && c >= 600
          ? (a = 50)
          : c < 600 && c >= 530
          ? (a = 40)
          : c < 530 && c >= 450
          ? (a = 25)
          : c < 450 && (a = 10),
        "trannhan" == o.id && l.matches(":hover"))
      ) {
        elTranNhan.style.display = "block";
        const o = elTranNhan.clientWidth / 2,
          l = elTranNhan.clientHeight + elTranNhan.clientHeight / 2 + a;
        (elTranNhan.style.left = widthImgTranNhan * width - o + "px"),
          (elTranNhan.style.top = heightImgTranNhan * height - l + "px");
      } else if ("lelinh" == o.id && l.matches(":hover")) {
        elLeLinh.style.display = "block";
        const o = elLeLinh.clientWidth / 2,
          l = elLeLinh.clientHeight + elLeLinh.clientHeight / 2 + a;
        (elLeLinh.style.left = widthImgLeLinh * width - o + "px"),
          (elLeLinh.style.top = heightImgLeLinh * height - l + "px");
      } else if ("manhtien" == o.id && l.matches(":hover")) {
        elManhTien.style.display = "block";
        const o = elManhTien.clientWidth / 2,
          l = elManhTien.clientHeight + elManhTien.clientHeight / 2 + a;
        (elManhTien.style.left = widthImgManhTien * width - o + "px"),
          (elManhTien.style.top = heightImgManhTien * height - l + "px");
      } else if ("phucduong" == o.id && l.matches(":hover")) {
        elPhucDuong.style.display = "block";
        const o = elPhucDuong.clientWidth / 2,
          l = elPhucDuong.clientHeight + elPhucDuong.clientHeight / 2 + a;
        (elPhucDuong.style.left = widthImgPhucDuong * width - o + "px"),
          (elPhucDuong.style.top = heightImgPhucDuong * height - l + "px");
      }
    },
    mapboss = document.getElementById("mapboss");
  function setCoordIntoAreaElement() {
    Array.from(mapboss.children).forEach((o) => changeCoords(o.id));
  }
  function setSizeBrower() {
    let o = document.querySelector(".our-image img");
    (width = o.clientWidth), (height = o.clientHeight);
  }
  function setHover() {
    areaTranNhan.addEventListener("mousemove", function checkHover() {
      setHoverArea(areaTranNhan);
    }),
      areaLeLinh.addEventListener("mousemove", function checkHover() {
        setHoverArea(areaLeLinh);
      }),
      areaPhucDuong.addEventListener("mousemove", function checkHover() {
        setHoverArea(areaPhucDuong);
      }),
      areaManhTien.addEventListener("mousemove", function checkHover() {
        setHoverArea(areaManhTien);
      }),
      areaTranNhan.addEventListener("mouseout", function checkHover() {
        elTranNhan.style.display = "none";
      }),
      areaLeLinh.addEventListener("mouseout", function checkHover() {
        elLeLinh.style.display = "none";
      }),
      areaPhucDuong.addEventListener("mouseout", function checkHover() {
        elPhucDuong.style.display = "none";
      }),
      areaManhTien.addEventListener("mouseout", function checkHover() {
        elManhTien.style.display = "none";
      });
  }
  function goToByScroll(o) {
    const l = document.getElementById(o).offsetTop;
    window.scroll(0, l);
  }
  setSizeBrower(),
    setHover(),
    window.addEventListener("resize", () => {
      (elTranNhan.style.display = "none"),
        (elLeLinh.style.display = "none"),
        (elPhucDuong.style.display = "none"),
        (elManhTien.style.display = "none"),
        setSizeBrower(),
        setHover(),
        setCoordIntoAreaElement();
    }),
    setCoordIntoAreaElement(),
    (function () {
      var t = function (o) {
        for (var l in ((this.input = null),
        (this.inputDisplay = null),
        (this.slider = null),
        (this.sliderWidth = 0),
        (this.sliderLeft = 0),
        (this.pointerWidth = 0),
        (this.pointerR = null),
        (this.pointerL = null),
        (this.activePointer = null),
        (this.selected = null),
        (this.scale = null),
        (this.step = 0),
        (this.tipL = null),
        (this.tipR = null),
        (this.timeout = null),
        (this.valRange = !1),
        (this.values = { start: null, end: null }),
        (this.conf = {
          target: null,
          values: null,
          set: null,
          range: !1,
          width: null,
          scale: !0,
          labels: !0,
          tooltip: !0,
          step: null,
          disabled: !1,
          onChange: null,
        }),
        (this.cls = {
          container: "rs-container",
          background: "rs-bg",
          selected: "rs-selected",
          pointer: "rs-pointer",
          scale: "rs-scale",
          noscale: "rs-noscale",
          tip: "rs-tooltip",
        }),
        this.conf))
          o.hasOwnProperty(l) && (this.conf[l] = o[l]);
        this.init();
      };
      (t.prototype.init = function () {
        return (
          "object" == typeof this.conf.target
            ? (this.input = this.conf.target)
            : (this.input = document.getElementById(
                this.conf.target.replace("#", "")
              )),
          this.input
            ? ((this.inputDisplay = getComputedStyle(this.input, null).display),
              (this.input.style.display = "none"),
              (this.valRange = !(this.conf.values instanceof Array)),
              !this.valRange ||
              (this.conf.values.hasOwnProperty("min") &&
                this.conf.values.hasOwnProperty("max"))
                ? this.createSlider()
                : console.log("Missing min or max value..."))
            : console.log("Cannot find target element...")
        );
      }),
        (t.prototype.createSlider = function () {
          return (
            (this.slider = i("div", this.cls.container)),
            (this.slider.innerHTML = '<div class="rs-bg"></div>'),
            (this.selected = i("div", this.cls.selected)),
            (this.pointerL = i("div", this.cls.pointer, ["dir", "left"])),
            (this.scale = i("div", this.cls.scale)),
            this.conf.tooltip &&
              ((this.tipL = i("div", this.cls.tip)),
              (this.tipR = i("div", this.cls.tip)),
              this.pointerL.appendChild(this.tipL)),
            this.slider.appendChild(this.selected),
            this.slider.appendChild(this.scale),
            this.slider.appendChild(this.pointerL),
            this.conf.range &&
              ((this.pointerR = i("div", this.cls.pointer, ["dir", "right"])),
              this.conf.tooltip && this.pointerR.appendChild(this.tipR),
              this.slider.appendChild(this.pointerR)),
            this.input.parentNode.insertBefore(
              this.slider,
              this.input.nextSibling
            ),
            this.conf.width &&
              (this.slider.style.width = parseInt(this.conf.width) + "px"),
            (this.sliderLeft = this.slider.getBoundingClientRect().left),
            (this.sliderWidth = this.slider.clientWidth),
            (this.pointerWidth = this.pointerL.clientWidth),
            this.conf.scale || this.slider.classList.add(this.cls.noscale),
            this.setInitialValues()
          );
        }),
        (t.prototype.setInitialValues = function () {
          if (
            (this.disabled(this.conf.disabled),
            this.valRange && (this.conf.values = s(this.conf)),
            (this.values.start = 0),
            (this.values.end = this.conf.range ? this.conf.values.length - 1 : 0),
            this.conf.set && this.conf.set.length && n(this.conf))
          ) {
            var o = this.conf.set;
            this.values.end = this.conf.values.indexOf(o[0]);
          }
          return this.createScale();
        }),
        (t.prototype.createScale = function (o) {
          this.step = this.sliderWidth / (this.conf.values.length - 1);
          for (var l = 0, c = this.conf.values.length; l < c; l++) {
            var a = i("span"),
              r = i("ins");
            a.appendChild(r),
              this.scale.appendChild(a),
              (a.style.width = l === c - 1 ? 0 : this.step - 0.1 + "px"),
              this.conf.labels
                ? (r.innerHTML = this.conf.values[l])
                : (0 !== l && l !== c - 1) || (r.innerHTML = this.conf.values[l]),
              (r.style.marginLeft = (r.clientWidth / 2) * -1 + "px");
          }
          return this.addEvents();
        }),
        (t.prototype.updateScale = function () {
          this.step = this.sliderWidth / (this.conf.values.length - 1);
          for (
            var o = this.slider.querySelectorAll("span"), l = 0, c = o.length;
            l < c;
            l++
          )
            o[l].style.width = this.step + "px";
          return this.setValues();
        }),
        (t.prototype.addEvents = function () {
          var o = this.slider.querySelectorAll("." + this.cls.pointer),
            l = this.slider.querySelectorAll("span");
          e(document, "mousemove touchmove", this.move.bind(this)),
            e(document, "mouseup touchend touchcancel", this.drop.bind(this));
          for (var c = 0, a = o.length; c < a; c++)
            e(o[c], "mousedown touchstart", this.drag.bind(this));
          for (c = 0, a = l.length; c < a; c++)
            e(l[c], "click", this.onClickPiece.bind(this));
          return (
            window.addEventListener("resize", this.onResize.bind(this)),
            this.setValues()
          );
        }),
        (t.prototype.drag = function (o) {
          if ((o.preventDefault(), !this.conf.disabled)) {
            var l = o.target.getAttribute("data-dir");
            return (
              "left" === l && (this.activePointer = this.pointerL),
              "right" === l && (this.activePointer = this.pointerR),
              this.slider.classList.add("sliding")
            );
          }
        }),
        (t.prototype.move = function (o) {
          if (this.activePointer && !this.conf.disabled) {
            var l =
              ("touchmove" === o.type ? o.touches[0].clientX : o.pageX) -
              this.sliderLeft -
              this.pointerWidth / 2;
            return (
              (l = Math.round(l / this.step)) <= 0 && (l = 0),
              l > this.conf.values.length - 1 &&
                (l = this.conf.values.length - 1),
              (this.values.end = l),
              this.setValues()
            );
          }
        }),
        (t.prototype.drop = function () {
          this.activePointer = null;
        }),
        (t.prototype.setValues = function (o, l) {
          var c = this.conf.range ? "start" : "end";
          let a;
          return (
            (a =
              1 == this.conf.values[this.values.end] ||
              0 == this.conf.values[this.values.end]
                ? "Month"
                : "Months"),
            o &&
              this.conf.values.indexOf(o) > -1 &&
              (this.values[c] = this.conf.values.indexOf(o)),
            l &&
              this.conf.values.indexOf(l) > -1 &&
              (this.values.end = this.conf.values.indexOf(l)),
            this.conf.range &&
              this.values.start > this.values.end &&
              (this.values.start = this.values.end),
            (this.pointerL.style.left =
              this.values[c] * this.step - this.pointerWidth / 2 - 1 + "px"),
            this.conf.tooltip &&
              (this.tipL.innerHTML = `${this.conf.values[this.values.end]} ${a}`),
            (this.input.value = this.conf.values[this.values.end]),
            this.values.end > this.conf.values.length - 1 &&
              (this.values.end = this.conf.values.length - 1),
            this.values.start < 0 && (this.values.start = 0),
            (this.selected.style.width =
              (this.values.end - this.values.start) * this.step + "px"),
            (this.selected.style.left = this.values.start * this.step + "px"),
            this.onChange()
          );
        }),
        (t.prototype.onClickPiece = function (o) {
          if (!this.conf.disabled) {
            var l = Math.round((o.clientX - this.sliderLeft) / this.step);
            return (
              l > this.conf.values.length - 1 &&
                (l = this.conf.values.length - 1),
              l < 0 && (l = 0),
              this.conf.range && l - this.values.start <= this.values.end - l
                ? (this.values.start = l)
                : (this.values.end = l),
              this.slider.classList.remove("sliding"),
              this.setValues()
            );
          }
        }),
        (t.prototype.onChange = function () {
          var o = this;
          this.timeout && clearTimeout(this.timeout),
            (this.timeout = setTimeout(function () {
              if (o.conf.onChange && "function" == typeof o.conf.onChange)
                return o.conf.onChange(o.input.value);
            }, 500));
        }),
        (t.prototype.onResize = function () {
          return (
            (this.sliderLeft = this.slider.getBoundingClientRect().left),
            (this.sliderWidth = this.slider.clientWidth),
            this.updateScale()
          );
        }),
        (t.prototype.disabled = function (o) {
          (this.conf.disabled = o),
            this.slider.classList[o ? "add" : "remove"]("disabled");
        }),
        (t.prototype.getValue = function () {
          return this.input.value;
        }),
        (t.prototype.destroy = function () {
          (this.input.style.display = this.inputDisplay), this.slider.remove();
        });
      var i = function (o, l, c) {
          var a = document.createElement(o);
          return (
            (a.id = "slider"),
            l && (a.className = l),
            c && 2 === c.length && a.setAttribute("data-" + c[0], c[1]),
            a
          );
        },
        e = function (o, l, c) {
          for (var a = l.split(" "), r = 0, d = a.length; r < d; r++)
            o.addEventListener(a[r], c);
        },
        s = function (o) {
          var l = [],
            c = o.values.max - o.values.min;
          if (!o.step)
            return (
              console.log("No step defined..."), [o.values.min, o.values.max]
            );
          for (var a = 0, r = c / o.step; a < r; a++)
            l.push(o.values.min + a * o.step);
          return l.indexOf(o.values.max) < 0 && l.push(o.values.max), l;
        },
        n = function (o) {
          return !o.set || o.set.length < 1 || o.values.indexOf(o.set[0]) < 0
            ? null
            : !o.range ||
                !(o.set.length < 2 || o.values.indexOf(o.set[1]) < 0) ||
                null;
        };
      window.rSlider = t;
    })();
  const checkboxWeb = document.getElementById("web"),
    checkboxMobile = document.getElementById("mobile"),
    checkboxGame = document.getElementById("game"),
    checkboxOther = document.getElementById("other"),
    checkboxes = document.getElementsByName("check"),
    elLine1 = document.getElementById("line1"),
    elLine2 = document.getElementById("line2"),
    elLine3 = document.getElementById("line3"),
    elLine4 = document.getElementById("line4"),
    elLine5 = document.getElementById("line5"),
    elLineGame = document.getElementById("lineGame"),
    bar2 = document.querySelector(".bar2"),
    bar3 = document.querySelector(".bar3"),
    timeline = document.querySelector(".timeline"),
    headingTitle = document.getElementById("text_progress"),
    form = document.querySelector(".ncc_project-form"),
    formOther1 = document.querySelector(".ncc_project-form_other1"),
    formOther2 = document.querySelector(".ncc_project-form_other2"),
    formOther3 = document.querySelector(".ncc_project-form_other3"),
    formOther4 = document.querySelector(".ncc_project-form_other4"),
    formOther5 = document.querySelector(".ncc_project-form_other5"),
    btnSubmit = document.getElementById("button-submit"),
    btnSubmitOther1 = document.getElementById("button-submit_other1"),
    btnSubmitOther2 = document.getElementById("button-submit_other2"),
    btnSubmitOther3 = document.getElementById("button-submit_other3"),
    btnSubmitOther4 = document.getElementById("button-submit_other4"),
    btnSubmitOther5 = document.getElementById("button-submit_other5"),
    btnBackOther1 = document.getElementById("button-back_other1"),
    btnBackOther2 = document.getElementById("button-back_other2"),
    btnBackOther3 = document.getElementById("button-back_other3"),
    btnBackOther4 = document.getElementById("button-back_other4"),
    btnBackOther5 = document.getElementById("button-back_other5"),
    formGame1 = document.querySelector(".ncc_project-form_game1"),
    formGame2 = document.querySelector(".ncc_project-form_game2"),
    formGame3 = document.querySelector(".ncc_project-form_game3"),
    formGame4 = document.querySelector(".ncc_project-form_game4"),
    formGame5 = document.querySelector(".ncc_project-form_game5"),
    btnSubmitGame1 = document.getElementById("button-submit_game1"),
    btnSubmitGame2 = document.getElementById("button-submit_game2"),
    btnSubmitGame3 = document.getElementById("button-submit_game3"),
    btnSubmitGame4 = document.getElementById("button-submit_game4"),
    btnSubmitGame5 = document.getElementById("button-submit_game5"),
    btnBackGame1 = document.getElementById("button-back_game1"),
    btnBackGame2 = document.getElementById("button-back_game2"),
    btnBackGame3 = document.getElementById("button-back_game3"),
    btnBackGame4 = document.getElementById("button-back_game4"),
    btnBackGame5 = document.getElementById("button-back_game5"),
    elReactjs = document.getElementById("reactjs"),
    elAngularjs = document.getElementById("angularjs"),
    elDotnet = document.getElementById("dotnet"),
    elNodejs = document.getElementById("nodejs"),
    elK8S = document.getElementById("K8S"),
    elVuejs = document.getElementById("vuejs"),
    elJava = document.getElementById("java"),
    elPhp = document.getElementById("php"),
    elServerless = document.getElementById("serverless"),
    elRequirement = document.getElementById("requirement"),
    elAuthentication = document.getElementById("authentication"),
    elDashboard = document.getElementById("dashboard"),
    elCamera = document.getElementById("camera"),
    elCart = document.getElementById("cart"),
    elManagement = document.getElementById("management"),
    elSocial = document.getElementById("social"),
    elLocations = document.getElementById("locations"),
    elSimplified = document.getElementById("simplified"),
    elGateway = document.getElementById("gateway"),
    elMigration = document.getElementById("migration"),
    elIdea = document.getElementById("idea"),
    elSketches = document.getElementById("sketches"),
    elDetailed = document.getElementById("detailed"),
    elRebuild = document.getElementById("rebuild"),
    elMaintenance = document.getElementById("maintenance"),
    elCms = document.getElementById("cms"),
    elEducation = document.getElementById("education"),
    elTournament = document.getElementById("tournament"),
    elProducts = document.getElementById("products"),
    elMedia = document.getElementById("media"),
    elCommerce = document.getElementById("commerce"),
    elStock = document.getElementById("stock"),
    elTravel = document.getElementById("travel"),
    elCocos = document.getElementById("cocos"),
    elUnity = document.getElementById("unity"),
    elUe = document.getElementById("ue"),
    elRequirementGame = document.getElementById("requirementGame"),
    elWebGame = document.getElementById("webGame"),
    elIos = document.getElementById("ios"),
    elAndroid = document.getElementById("android"),
    elDesktop = document.getElementById("desktop"),
    elPurchase = document.getElementById("purchase"),
    elQuest = document.getElementById("quest"),
    elIllustrator = document.getElementById("illustrator"),
    elPvp = document.getElementById("pvp"),
    elServer = document.getElementById("server"),
    elBattles = document.getElementById("battles"),
    elApplication = document.getElementById("application"),
    elUsage = document.getElementById("Usage"),
    elCasualKids = document.getElementById("casualKids"),
    elRpgAction = document.getElementById("rpgAction"),
    elAutoBattler = document.getElementById("autoBattler"),
    elQuizzes = document.getElementById("quizzes"),
    elIdeaGame = document.getElementById("ideaGame"),
    elSketchesGame = document.getElementById("sketchesGame"),
    elPrototypes = document.getElementById("prototypes"),
    elExisting = document.getElementById("existing"),
    elMaintenanceProduct = document.getElementById("maintenanceProduct"),
    aleartsurvey = document.querySelector("#aleart-survey");
  let content = "",
    contentFormOther1 = "",
    contentFormOther2 = "",
    contentFormOther3 = "",
    contentFormGame1 = "",
    contentFormGame2 = "",
    contentFormGame3 = "",
    contentFormGame4 = "",
    newVal = 1,
    checkedForm = 0;
  function setTextHtml(o, l) {
    let c;
    (headingTitle.innerHTML = ""),
      (c = l
        ? document.createTextNode(`Progress (${o}/${l})`)
        : document.createTextNode(`Progress (${o}/5)`)),
      headingTitle.appendChild(c);
  }
  function handleActiveFormOther() {
    (form.style.display = "none"),
      (timeline.style.display = "block"),
      (formOther1.style.display = "block"),
      setTextHtml(1),
      (elLine1.style.backgroundColor = "var(--blue-color)");
  }
  function handleDeactiveFormOther1() {
    (form.style.display = "block"),
      (formOther1.style.display = "none"),
      (elLine1.style.backgroundColor = "var(--white-color)"),
      (timeline.style.display = "none");
  }
  function handleActiveFormOther1() {
    (formOther1.style.display = "none"),
      (formOther2.style.display = "block"),
      (elLine2.style.backgroundColor = "var(--blue-color)"),
      elReactjs.checked && (content += "Reactjs\n"),
      elAngularjs.checked && (content += "AngularJs\n"),
      elDotnet.checked && (content += "Dotnet Framework\n"),
      elNodejs.checked && (content += "NodeJS Stack\n"),
      elK8S.checked && (content += "K8S\n"),
      elVuejs.checked && (content += "VueJs\n"),
      elJava.checked && (content += "Java Spring Boot\n"),
      elPhp.checked && (content += "PHP\n"),
      elServerless.checked && (content += "Serverlesss\n"),
      elRequirement.checked &&
        (content += "Can be anything that fit project requirement\n");
    const o = document.getElementById("technologys").value;
    "" !== o && (content += o),
      "" !== content &&
        (content =
          "- Which technology do you prefer for the project? \n" +
          content +
          "\n"),
      (contentFormOther1 = content),
      setTextHtml(2);
  }
  function handleDeactiveFormOther2() {
    (formOther1.style.display = "block"),
      (formOther2.style.display = "none"),
      (elLine2.style.backgroundColor = "var(--white-color)"),
      setTextHtml(1);
  }
  function handleActiveFormOther2() {
    (formOther2.style.display = "none"),
      (formOther3.style.display = "block"),
      (elLine3.style.backgroundColor = "var(--blue-color)");
    (content += "\n- What features do you need on your project?\n"),
      elAuthentication.checked && (content += "Normal Authentication\n"),
      elDashboard.checked && (content += "Dashboard\n"),
      elCamera.checked && (content += "Camera/Photos/Videos\n"),
      elCart.checked && (content += "Shopping Cart\n"),
      elManagement.checked && (content += "Security Management\n"),
      elSocial.checked && (content += "Social network Authentication\n"),
      elLocations.checked && (content += "Maps/Directions/Locations\n"),
      elSimplified.checked && (content += "Simplified/Extended Chat\n"),
      elGateway.checked && (content += "Payment Gateway\n"),
      elMigration.checked && (content += "Integration/Migration\n");
    const o = document.getElementById("features").value;
    "" !== o && (content = content + o + "\n"),
      (contentFormOther2 = content),
      setTextHtml(3);
  }
  function handleDeactiveFormOther3() {
    (formOther2.style.display = "block"),
      (formOther3.style.display = "none"),
      (elLine3.style.backgroundColor = "var(--white-color)"),
      setTextHtml(2);
  }
  function handleActiveFormOther3() {
    (formOther3.style.display = "none"),
      (formOther4.style.display = "block"),
      (elLine4.style.backgroundColor = "var(--blue-color)");
    (content += "\n- Can we know about the state of project?\n"),
      elIdea.checked && (content += "Idea\n"),
      elSketches.checked && (content += "Sketches\n"),
      elDetailed.checked && (content += "Detailed Prototypes\n"),
      elRebuild.checked && (content += "Rebuild existing product\n"),
      elMaintenance.checked && (content += "Maintenance of product\n"),
      (contentFormOther3 = content),
      setTextHtml(4);
  }
  btnSubmit.addEventListener("click", function (o) {
    (!checkboxWeb.checked ||
      checkboxMobile.checked ||
      checkboxGame.checked ||
      checkboxOther.checked) &&
    (!checkboxMobile.checked ||
      checkboxWeb.checked ||
      checkboxGame.checked ||
      checkboxOther.checked)
      ? !checkboxGame.checked ||
        checkboxMobile.checked ||
        checkboxWeb.checked ||
        checkboxOther.checked
        ? !checkboxOther.checked ||
          checkboxMobile.checked ||
          checkboxGame.checked ||
          checkboxWeb.checked
          ? checkboxes.forEach((o) => {
              (o.parentElement.style.borderColor = "#FF7B87"),
                (aleartsurvey.style.display = "block");
            })
          : ((elLineGame.style.display = "none"),
            (checkedForm = 0),
            handleActiveFormOther())
        : ((elLineGame.style.display = "block"),
          (checkedForm = 1),
          handleActiveFormGame())
      : ((elLineGame.style.display = "none"),
        (checkedForm = 0),
        handleActiveFormOther());
  }),
    btnBackOther1.addEventListener("click", function (o) {
      handleDeactiveFormOther1(), (content = "");
    }),
    btnSubmitOther1.addEventListener("click", function (o) {
      handleActiveFormOther1();
    }),
    btnBackOther2.addEventListener("click", function (o) {
      handleDeactiveFormOther2(), (content = "");
    }),
    btnSubmitOther2.addEventListener("click", function (o) {
      handleActiveFormOther2();
    }),
    btnBackOther3.addEventListener("click", function (o) {
      handleDeactiveFormOther3(), (content = contentFormOther1);
    }),
    btnSubmitOther3.addEventListener("click", function (o) {
      handleActiveFormOther3(),
        bar3 && (bar3.style.display = "none"),
        bar2 && (bar2.style.display = "block"),
        runRangerOther();
    });
  var runRangerOther = function () {
    const o = document.getElementById("slider2-container").parentNode;
    document.getElementById("slider2-container").remove(),
      (o.innerHTML =
        ' <div class="slider-container"  id="slider2-container">\n    <input type="text" id="slider2" class="slider" style="display:block"/>\n  </div>'),
      new rSlider({
        target: "#slider2",
        values: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
        range: !1,
        set: [1],
        onChange: function (o) {
          newVal = o;
        },
      });
  };
  function handleDeactiveFormOther4() {
    (formOther3.style.display = "block"),
      (formOther4.style.display = "none"),
      (elLine4.style.backgroundColor = "var(--white-color)"),
      setTextHtml(3);
  }
  function setTextSlider() {
    content =
      1 == newVal
        ? content +
          "\n- Your expected timeline to finish the project?\n" +
          `0${newVal} Month\n`
        : 10 == newVal
        ? content +
          "\n- Your expected timeline to finish the project?\n" +
          `0${newVal} Months\n`
        : content +
          "\n- Your expected timeline to finish the project?\n" +
          `${newVal} Months\n`;
  }
  function handleActiveFormOther4(o) {
    (el = `elLine${o}`),
      (formOther4.style.display = "none"),
      (formOther5.style.display = "block"),
      "elLine5" == el && (elLine5.style.backgroundColor = "var(--blue-color)");
    (content += "\n- What features do you need on your project?\n"),
      elCms.checked && (content += "CMS\n"),
      elEducation.checked && (content += "Education\n"),
      elTournament.checked && (content += "Esport/Tournament\n"),
      elProducts.checked && (content += "Showroom of products\n"),
      elMedia.checked && (content += "Social Media\n"),
      elCommerce.checked && (content += "E-commerce\n"),
      elStock.checked && (content += "Stock/Crypto Currency/Financial Market\n"),
      elTravel.checked && (content += "Travel\n");
    const l = document.getElementById("description").value;
    "" !== l &&
      (content =
        content +
        "\n- Can you give us other short description of your project?\n" +
        l +
        "\n");
    const c = document.getElementById("websites").value;
    "" !== c &&
      (content =
        content +
        "\n- Are there websites that you want us to based on?\n" +
        c +
        "\n");
    const a = document.getElementById("improve").value;
    "" !== a &&
      (content =
        content +
        "\n- What do you expect to improve from those website?\n" +
        a +
        "\n"),
      setTextSlider(),
      setTextHtml(5);
  }
  function handleDeactiveFormOther5(o) {
    0 == checkedForm
      ? ((el = `elLine${o}`),
        (formOther4.style.display = "block"),
        (formOther5.style.display = "none"),
        "elLine5" == el && (elLine5.style.backgroundColor = "var(--white-color)"),
        setTextHtml(4),
        (content = contentFormOther3))
      : ((formGame5.style.display = "block"),
        (formOther5.style.display = "none"),
        (elLine5.style.backgroundColor = "var(--white-color)"),
        setTextHtml(5, 6),
        (content = contentFormGame4));
  }
  btnBackOther4.addEventListener("click", function (o) {
    handleDeactiveFormOther4(), (content = contentFormOther2);
  }),
    btnSubmitOther4.addEventListener("click", function (o) {
      handleActiveFormOther4(5);
    }),
    btnBackOther5.addEventListener("click", function (o) {
      handleDeactiveFormOther5(5);
    });
  const validateEmailSur = (o) =>
      o.match(
        /^([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/
      ),
    validatePhoneSurvey = (o) =>
      o.match(
        /^\s*(?:\+?(\d{1,3}))?[-. (]*(\d{3})[-. )]*(\d{3})[-. ]*(\d{4})(?: *x(\d+))?\s*$/
      );
  function handleActiveFormOther5(o) {
    fetch("https://email.ncc.asia/ncc-site-api-sendmail", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(o),
    })
      .then((o) => o.json())
      .then((o) => {
        o.success
          ? (printMess(
              "nameSuccessSurvey",
              "Thank you, your submission has been received."
            ),
            formEl.reset())
          : printMess("nameErrorSurvey", `${o.message}`);
      })
      .catch((o) => {
        printMess(
          "nameErrorSurvey",
          "Oops, something went wrong. Please try again later."
        );
      }),
      (formOther5.style.display = "none"),
      (timeline.style.display = "none"),
      (form.style.display = "block"),
      (elLineGame.style.backgroundColor = "var(--white-color)"),
      (elLine5.style.backgroundColor = "var(--white-color)"),
      (elLine4.style.backgroundColor = "var(--white-color)"),
      (elLine3.style.backgroundColor = "var(--white-color)"),
      (elLine2.style.backgroundColor = "var(--white-color)"),
      (elLine1.style.backgroundColor = "var(--white-color)"),
      (content = ""),
      (checkedForm = 0);
  }
  function handleActiveFormGame() {
    (form.style.display = "none"),
      (timeline.style.display = "block"),
      (formGame1.style.display = "block"),
      setTextHtml(1, 6),
      (elLine1.style.backgroundColor = "var(--blue-color)");
  }
  function handleDeactiveFormGame1() {
    (form.style.display = "block"),
      (formGame1.style.display = "none"),
      (elLine1.style.backgroundColor = "var(--white-color)"),
      (timeline.style.display = "none");
  }
  function handleActiveFormGame1() {
    (formGame1.style.display = "none"),
      (formGame2.style.display = "block"),
      (elLine2.style.backgroundColor = "var(--blue-color)"),
      elCocos.checked && (content += "Cocos\n"),
      elUnity.checked && (content += "Unity\n"),
      elUe.checked && (content += "ue4/5\n"),
      elRequirementGame.checked &&
        (content += "Can be anything that fit game requirement\n");
    const o = document.getElementById("technologysGame").value;
    "" !== o && (content = content + o + "\n"),
      (content += "\nWhich plattform do you want to use?\n"),
      elWebGame.checked && (content += "Web\n"),
      elIos.checked && (content += "Ios\n"),
      elAndroid.checked && (content += "Android\n"),
      elDesktop.checked && (content += "Desktop\n");
    const l = document.getElementById("plattforms").value;
    "" !== l && (content += l),
      "" !== content &&
        (content =
          "- Which technology do you prefer for the project? \n" +
          content +
          "\n"),
      setTextHtml(2, 6),
      (contentFormGame1 = content);
  }
  function handleDeactiveFormGame2() {
    (formGame1.style.display = "block"),
      (formGame2.style.display = "none"),
      (elLine2.style.backgroundColor = "var(--white-color)"),
      setTextHtml(1, 6);
  }
  function handleActiveFormGame2() {
    (formGame2.style.display = "none"),
      (formGame3.style.display = "block"),
      (elLine3.style.backgroundColor = "var(--blue-color)");
    (content += "\n- What features do you need on your project?\n"),
      elPurchase.checked && (content += "In app purchase\n"),
      elQuest.checked && (content += "Daily/Achievement Quest\n"),
      elIllustrator.checked && (content += "3D illustrator\n"),
      elPvp.checked && (content += "Real Time PvP\n"),
      elServer.checked && (content += "Server/Private Chat\n"),
      elBattles.checked && (content += "Battles\n"),
      elApplication.checked &&
        (content += "Damage/Level/… calculation and application\n"),
      elUsage.checked && (content += "Offline Usage\n"),
      setTextHtml(3, 6),
      (contentFormGame2 = content);
  }
  function handleDeactiveFormGame3() {
    (formGame2.style.display = "block"),
      (formGame3.style.display = "none"),
      (elLine3.style.backgroundColor = "var(--white-color)"),
      setTextHtml(2, 6);
  }
  function handleActiveFormGame3() {
    (formGame3.style.display = "none"),
      (formGame4.style.display = "block"),
      (elLine4.style.backgroundColor = "var(--blue-color)");
    (content += "\n- What is the expertise of the game?\n"),
      elCasualKids.checked && (content += "EDUCATION/CASUAL/KIDS\n"),
      elRpgAction.checked && (content += "RPG/ACTION/ADVENTURE\n"),
      elAutoBattler.checked && (content += "AUTO BATTLER\n"),
      elQuizzes.checked && (content += "IQ/QUIZZES\n"),
      setTextHtml(4, 6),
      (contentFormGame3 = content);
  }
  function handleDeactiveFormGame4() {
    (formGame3.style.display = "block"),
      (formGame4.style.display = "none"),
      (elLine4.style.backgroundColor = "var(--white-color)"),
      setTextHtml(3, 6);
  }
  function handleActiveFormGame4() {
    (formGame4.style.display = "none"), (formGame5.style.display = "block");
    (content += "\n- Can we know about the state of project?\n"),
      elIdeaGame.checked && (content += "Idea\n"),
      elSketchesGame.checked && (content += "Sketches\n"),
      elPrototypes.checked && (content += "Detailed Prototypes\n"),
      elExisting.checked && (content += "Rebuild existing product\n"),
      elMaintenanceProduct.checked && (content += "Maintenance of product\n"),
      (elLineGame.style.display = "block"),
      (elLineGame.style.backgroundColor = "var(--blue-color)"),
      setTextHtml(5, 6),
      (contentFormGame4 = content);
  }
  btnSubmitOther5.addEventListener("click", function (o) {
    const l = document.getElementById("nameSurvey").value,
      c = document.getElementById("mailSurvey").value,
      a = document.getElementById("phoneSurvey").value,
      r = document.getElementById("contentSurvey").value;
    content += `\nsend: Name: ${l}, Phone: ${a}, Content: ${r}`;
    const d = { email: c, content: content };
    a.match(
      /^\s*(?:\+?(\d{1,3}))?[-. (]*(\d{3})[-. )]*(\d{3})[-. ]*(\d{4})(?: *x(\d+))?\s*$/
    ) &&
      validateEmailSur(c) &&
      handleActiveFormOther5(d);
  }),
    btnBackGame1.addEventListener("click", function (o) {
      handleDeactiveFormGame1(), (content = "");
    }),
    btnSubmitGame1.addEventListener("click", function (o) {
      handleActiveFormGame1();
    }),
    btnBackGame2.addEventListener("click", function (o) {
      handleDeactiveFormGame2(), setTextHtml(1, 6), (content = "");
    }),
    btnSubmitGame2.addEventListener("click", function (o) {
      handleActiveFormGame2();
    }),
    btnBackGame3.addEventListener("click", function (o) {
      handleDeactiveFormGame3(), (content = contentFormGame1);
    }),
    btnSubmitGame3.addEventListener("click", function (o) {
      handleActiveFormGame3();
    }),
    btnBackGame4.addEventListener("click", function (o) {
      handleDeactiveFormGame4(), (content = contentFormGame2);
    });
  var runRangerGame = function () {
    const o = document.getElementById("slider3-container").parentNode;
    document.getElementById("slider3-container").remove(),
      (o.innerHTML =
        ' <div class="slider-container"  id="slider3-container">\n    <input type="text" id="slider3" class="slider" style="display:block"/>\n  </div>'),
      new rSlider({
        target: "#slider3",
        values: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
        range: !1,
        set: [1],
        onChange: function (o) {
          newVal = o;
        },
      });
  };
  function handleDeactiveFormGame5() {
    (formGame4.style.display = "block"),
      (formGame5.style.display = "none"),
      (elLineGame.style.backgroundColor = "var(--white-color)"),
      setTextHtml(4, 6);
  }
  function handleActiveFormGame5() {
    (formGame5.style.display = "none"),
      (formOther5.style.display = "block"),
      (elLine5.style.backgroundColor = "var(--blue-color)");
    content += "\n- Can we know more about your game?\n";
    const o = document.getElementById("contentDesGame").value;
    "" !== o &&
      (content =
        content +
        "\n- Can you give us other short description of your project?\n" +
        o +
        "\n");
    const l = document.getElementById("contentSimilarGame").value;
    "" !== l &&
      (content =
        content +
        "\n- Is there similar game that you want to base on?\n" +
        l +
        "\n");
    const c = document.getElementById("contentLikeGame").value;
    "" !== c &&
      (content =
        content +
        "\n- What do you like/dislike about the similar game that you want to improve in your game?\n" +
        c +
        "\n"),
      setTextSlider(),
      setTextHtml(6, 6);
  }
  function onlyOne(o) {
    checkboxes.forEach((l) => {
      l !== o && (l.checked = !1),
        (l.parentElement.style.borderColor = "#aabff2"),
        (aleartsurvey.style.display = "none");
    });
  }
  btnSubmitGame4.addEventListener("click", function (o) {
    handleActiveFormGame4(),
      bar2 && (bar2.style.display = "none"),
      bar3 && (bar3.style.display = "block"),
      runRangerGame();
  }),
    btnBackGame5.addEventListener("click", function (o) {
      handleDeactiveFormGame5(), (content = contentFormGame3);
    }),
    btnSubmitGame5.addEventListener("click", function (o) {
      handleActiveFormGame5();
    }),
    window.addEventListener("resize", () => {
      runRangerOther(), runRangerGame();
    });